name: "aiosmtpd CI"

on:
  # This is for direct commit to master
  push:
    branches: [ "master" ]
    paths:
      - "aiosmtpd/*"
      - "setup.cfg"  # To monitor changes in dependencies
  # This is for PRs
  pull_request:
    branches: [ "master" ]
    paths:
      - "aiosmtpd/*"
      - "setup.cfg"  # To monitor changes in dependencies
  # Manual/on-demand
  workflow_dispatch:
  # When doing "releases"
  release:
    types: [ "created", "edited", "published", "prereleased", "released" ]

jobs:
  qa_docs:
    runs-on: ubuntu-20.04
    steps:
      - name: "Checkout latest commit"
        uses: actions/checkout@v2
      - name: "Set up Python"
        uses: actions/setup-python@v2
        with:
          # 3.8 is chosen because it seems to be the fastest for <3.9
          python-version: 3.8
      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install colorama pytype flake8 pytest sphinx pickle5
          python setup.py develop
      - name: "flake8 Style Checking"
        run: |
          python -m flake8 aiosmtpd conf.py setup.py housekeep.py release.py
      - name: "Generate Docs"
        run: |
          pytest aiosmtpd/docs
          python setup.py build_sphinx
      - name: "Other QA stuff"
        run: |
          pytest --tb=short aiosmtpd/qa
      # - name: "Static Type Checking"
      #   run: |
      #           pytype --keep-going --jobs auto .
  testing:
    needs: qa_docs
    strategy:
      # If a matrix fail, do NOT stop other matrix, let them run to completion
      fail-fast: false
      matrix:
        os: [ "ubuntu-18.04", "ubuntu-20.04", "macos-10.15" ]
        platform: [ "posix" ]
        python-version: [ "3.6", "3.7", "3.8", "3.9", "pypy3" ]
        include:
          - os: "windows-latest"
            platform: "mswin"
            # 3.7 is the latest frozen branch as indicated on
            # https://devguide.python.org/#branchstatus
            # ('frozen' means Status == "security")
            python-version: [ "3.7", "3.8", "3.9", "pypy3" ]
    runs-on: ${{ matrix.os }}
    steps:
    - name: "Checkout latest commit"
      uses: actions/checkout@v2
    - name: "Set up Python ${{ matrix.python-version }}"
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: "Install dependencies"
      run: |
        python -m pip install --upgrade pip setuptools wheel
        # Test deps
        pip install colorama coverage[toml] packaging pytest pytest-cov pytest-mock
        # Package deps
        python setup.py develop
    - name: "Execute testing"
      env:
        PLATFORM: ${{ matrix.platform }}
      run: |
        pytest --cov --cov-report=xml --cov-report=term
    - name: "Report to codecov"
      # Ubuntu 18.04 came out of the box with 3.6, and LOTS of system are still running
      # 18.04 happily, so we choose this as the 'canonical' code coverage testing.
      # One day we'll have to revisit this and bump the version ...
      if: matrix.python-version == '3.6' && matrix.os == 'ubuntu-18.04'
      uses: codecov/codecov-action@v1
